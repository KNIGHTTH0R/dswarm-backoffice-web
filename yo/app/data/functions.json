{
  "functions": [{
    "name": "blacklist",
    "dsl": "metafacture",
    "reference": "blacklist",
    "description": "Blacklist filter",
    "parameters": {
      "entry": {
        "repeat": true,
        "type": "repeat",
        "parameters": {
          "name": {
            "type": "text"
          },
          "value": {
            "type": "text",
            "optional": true
          }
        }
      }
    }
  }, {
    "name": "case",
    "dsl": "metafacture",
    "reference": "case",
    "description": "Upper/lower-case transformation.",
    "parameters": {
      "to": {
        "type": "radio",
        "choices": ["upper", "lower"]
      },
      "language": {
        "type": "text",
        "optional": true
      }
    }
  }, {
    "name": "compose",
    "dsl": "metafacture",
    "reference": "compose",
    "description": "Add pre- or postfix to a string.",
    "parameters": {
      "prefix": {
        "type": "text",
        "optional": true
      },
      "postfix": {
        "type": "text",
        "optional": true
      }
    }
  }, {
    "name": "constant",
    "dsl": "metafacture",
    "reference": "constant",
    "description": "Sets literal value to a constant.",
    "parameters": {
      "value": {
        "type": "text"
      }
    }
  }, {
    "name": "count",
    "dsl": "metafacture",
    "reference": "count",
    "description": "Returns the an increasing count for each received literal."
  }, {
    "name": "equals",
    "dsl": "metafacture",
    "reference": "equals",
    "description": "Returns the value only if equality holds.",
    "parameters": {
      "string": {
        "type": "text"
      }
    }
  }, {
    "name": "htmlanchor",
    "dsl": "metafacture",
    "reference": "htmlanchor",
    "description": "Create an HTML anchor.",
    "parameters": {
      "prefix": {
        "type": "text"
      },
      "postfix": {
        "type": "text",
        "optional": true
      },
      "title": {
        "type": "text",
        "optional": true
      }
    }
  }, {
    "name": "isbn",
    "dsl": "metafacture",
    "reference": "isbn",
    "description": "ISBN conversion and verification.",
    "parameters": {
      "to": {
        "type": "radio",
        "choices": ["isbn13", "isbn10", "clean"]
      },
      "verifyCheckDigit": {
        "type": "checkbox",
        "optional": true
      }
    }
  }, {
    "name": "lookup",
    "dsl": "metafacture",
    "reference": "lookup",
    "description": "Performs a table lookup",
    "parameters": {
      "in": {
        "type": "text",
        "optional": true,
        "description": "Unique name of the lookup table"
      },
      "default": {
        "type": "text",
        "optional": true,
        "description": "Value used if no corresponding key is found."
      },
      "entry": {
        "repeat": true,
        "type": "repeat",
        "parameters": {
          "name": {
            "type": "text"
          },
          "value": {
            "type": "text",
            "optional": true
          }
        }
      }
    }
  }, {
    "name": "normalize-utf8",
    "dsl": "metafacture",
    "reference": "normalize-utf8"
  }, {
    "name": "not-equals",
    "dsl": "metafacture",
    "reference": "not-equals",
    "description": "Returns value only if equality does not hold.",
    "parameters": {
      "string": {
        "type": "text"
      }
    }
  }, {
    "name": "occurrence",
    "dsl": "metafacture",
    "reference": "occurrence",
    "description": "Filter by number of occurrence.",
    "parameters": {
      "only": {
        "type": "text",
        "pattern": "(lessThen |moreThen )?\\d+"
      },
      "sameEntity": {
        "type": "checkbox",
        "optional": true
      }
    }
  }, {
    "name": "regexp",
    "dsl": "metafacture",
    "reference": "regexp",
    "description": "Extract data based on a regular expression. Syntax corresponds to Java Regular Expressions.",
    "parameters": {
      "match": {
        "type": "text"
      },
      "format": {
        "type": "text",
        "optional": true
      }
    }
  }, {
    "name": "replace",
    "dsl": "metafacture",
    "reference": "replace",
    "description": "String replace based on a regular expression. Pattern syntax corresponds to Java Regular Expressions.",
    "parameters": {
      "pattern": {
        "type": "regexp"
      },
      "with": {
        "type": "text",
        "description": "The replacement"
      }
    }
  }, {
    "name": "setreplace",
    "dsl": "metafacture",
    "reference": "setreplace",
    "description": "Relace strings based on a replacement table.",
    "parameters": {
      "map": {
        "type": "text",
        "optional": true,
        "description": "Unique name of the replacement table."
      },
      "entry": {
        "repeat": true,
        "type": "repeat",
        "parameters": {
          "name": {
            "type": "text"
          },
          "value": {
            "type": "text",
            "optional": true
          }
        }
      }
    }
  }, {
    "name": "split",
    "dsl": "metafacture",
    "reference": "split",
    "description": "Split string based on a regular expression. Pattern syntax corresponds to Java Regular Expressions.",
    "parameters": {
      "delimiter": {
        "type": "text",
        "description": "Regular expression, defining the split"
      }
    }
  }, {
    "name": "substring",
    "dsl": "metafacture",
    "reference": "substring",
    "description": "Returns a substring",
    "parameters": {
      "start": {
        "type": "number",
        "optional": true
      },
      "end": {
        "type": "number",
        "optional": true
      }
    }
  }, {
    "name": "switch-name-value",
    "dsl": "metafacture",
    "reference": "switch-name-value",
    "description": "Switches name and value."
  }, {
    "name": "trim",
    "dsl": "metafacture",
    "reference": "trim",
    "description": "Trimms the value"
  }, {
    "name": "unique",
    "dsl": "metafacture",
    "reference": "unique",
    "description": "Filters out dublicate literals",
    "parameters": {
      "in": {
        "type": "select",
        "choices": ["record", "entity"],
        "optional": true,
        "description": "Scope of 'sameness' (experimental)"
      },
      "part": {
        "type": "select",
        "choices": ["value", "name", "name-value"],
        "optional": true,
        "description": "Part of the literal is tested for equality"
      }
    }
  }, {
    "name": "urlencode",
    "dsl": "metafacture",
    "reference": "urlencode",
    "description": "Escapes value according to URL encoding rules."
  }, {
    "name": "whitelist",
    "dsl": "metafacture",
    "reference": "whitelist",
    "description": "Whitelist filter.",
    "parameters": {
      "map": {
        "type": "text",
        "optional": true,
        "description": "Unique name of the replacement table."
      },
      "entry": {
        "repeat": true,
        "type": "repeat",
        "parameters": {
          "name": {
            "type": "text"
          },
          "value": {
            "type": "text",
            "optional": true
          }
        }
      }
    }
  }]
}
